{"version":3,"sources":["utils/config.js","utils/helper.js","hooks/useFetch.js","components/ContactItem/index.js","components/Contacts/index.js","App.js","reportWebVitals.js","index.js","components/ContactItem/ContactItem.module.scss","components/Contacts/Contacts.module.scss"],"names":["CONFIG","groupContactsBasedOnLetters","contacts","results","tabs","contactArray","reduce","r","e","filter","item","letter","name","last","charAt","toLowerCase","includes","forEach","contact","push","Object","keys","map","key","useFetch","url","loading","cache","useRef","useState","response","setResponse","isLoading","setIsLoading","getDataFromAPI","a","current","data","fetch","json","useEffect","ContactItem","props","str","userInfo","rootClass","classnames","styles","contactCard","className","closeIcon","onClick","closeUserCard","CloseOutlined","photo","src","picture","medium","alt","first","information","fullname","toUpperCase","email","phone","location","street","number","city","state","postcode","username","login","TabPane","Tabs","Contacts","userCard","setUserCard","URL","title","type","defaultActiveKey","pane","tab","tabItem","tabItemChar","tabItemLength","length","disabled","listWrapper","index","id","uuid","prevShownComments","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.81efdea1.chunk.js","sourcesContent":["export const CONFIG = {\n\ttitle: \"Contact List\",\n\tuserUrl: \"https://api.randomuser.me\",\n\tnumberCards: 120,\n\ttabs: [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n}\n","import {CONFIG} from '../utils/config'\n\nexport const groupContactsBasedOnLetters = (contacts) => {\n\tconst {results} = contacts;\n\tconst {tabs} = CONFIG;\n\n\tconst contactArray = tabs.reduce((r, e) => {\n\t\tif(!r[e]) r[e] = []\n\t\treturn r;\n\t}, {});\n\n\tconst removeExtraLetters = results.filter(item => {\n\t\t\tconst letter = item.name.last.charAt(0).toLowerCase()\n\t\t\treturn tabs.includes(letter)\n\t});\n\n\tremoveExtraLetters.forEach(contact => {\n\t\tconst letter = contact.name.last.charAt(0).toLowerCase();\n\t\tcontactArray[letter].push(contact);\n\t})\n\n\treturn Object.keys(contactArray).map(key => ({key, results: contactArray[key]}));\n\n}\n\nexport const makeStringtoUpperCase = str => str.toUpperCase();\n","import React, { useState, useEffect, useRef } from 'react';\nimport {groupContactsBasedOnLetters} from '../utils/helper'\n\nconst useFetch = (url, loading) => {\n\tconst cache = useRef({});\n\tconst [response, setResponse] = useState(null);\n\tconst [isLoading, setIsLoading] = useState(loading);\n\n\tconst getDataFromAPI = async () => {\n\t\tsetIsLoading(true)\n\t\tif (cache.current[url]) {\n\t\t\tconst data = cache.current[url];\n\t\t\tconst contacts = groupContactsBasedOnLetters(data)\n\t\t\tsetResponse(contacts);\n\t\t\tsetIsLoading(false)\n\t\t} else {\n\t\t\tconst response = await fetch(url);\n\t\t\tconst data = await response.json();\n\t\t\tcache.current[url] = data; // set response in cache;\n\t\t\tconst contacts = groupContactsBasedOnLetters(data)\n\t\t\tsetResponse(contacts);\n\t\t\tsetIsLoading(false)\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\t getDataFromAPI()\n\t}, [url]);\n\n\treturn { response, isLoading };\n}\n\n\nexport default useFetch;\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport styles from './ContactItem.module.scss'\nimport {CloseOutlined} from \"@ant-design/icons\";\nimport {makeStringtoUpperCase} from '../../utils/helper'\n\nconst ContactItem = props => {\n\n\tconst {userInfo} = props;\n\n\tconst handleCloseUserCard = () => {\n\t\tprops.closeUserCard()\n\t}\n\n\tconst rootClass = classnames(\n\t\t{\n\t\t\t[styles.contactCard]: true,\n\t\t},\n\t);\n\n\treturn (\n\t\t<div className={rootClass}>\n\t\t\t<span className={styles.closeIcon} onClick={handleCloseUserCard}>\n\t\t\t\t<CloseOutlined />\n\t\t\t</span>\n\t\t\t<div className={styles.photo}>\n\t\t\t\t<img src={userInfo.picture.medium} alt={`${userInfo.name.first} ${userInfo.name.last}`}/>\n\t\t\t</div>\n\t\t\t<div className={styles.information}>\n\n\t\t\t\t<div className={styles.fullname}>\n\t\t\t\t\t{makeStringtoUpperCase(userInfo.name.first)}, {userInfo.name.last}\n\t\t\t\t</div>\n\n\t\t\t\t<div className={styles.userInfo}>\n\t\t\t\t\t<label>e-mail</label>\n\t\t\t\t\t<span>{userInfo.email}</span>\n\t\t\t\t</div>\n\n\t\t\t\t<div className={styles.userInfo}>\n\t\t\t\t\t<label>phone</label>\n\t\t\t\t\t<span>{userInfo.phone}</span>\n\t\t\t\t</div>\n\n\t\t\t\t<div className={styles.userInfo}>\n\t\t\t\t\t<label>street</label>\n\t\t\t\t\t<span>{userInfo.location.street.number} {userInfo.location.street.name}</span>\n\t\t\t\t</div>\n\n\t\t\t\t<div className={styles.userInfo}>\n\t\t\t\t\t<label>city</label>\n\t\t\t\t\t<span>{userInfo.location.city}</span>\n\t\t\t\t</div>\n\n\t\t\t\t<div className={styles.userInfo}>\n\t\t\t\t\t<label>state</label>\n\t\t\t\t\t<span>{userInfo.location.state}</span>\n\t\t\t\t</div>\n\n\t\t\t\t<div className={styles.userInfo}>\n\t\t\t\t\t<label>postcode</label>\n\t\t\t\t\t<span>{userInfo.location.postcode}</span>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t\t<div className={styles.username}>\n\t\t\t\t<label>\n\t\t\t\t\tusername\n\t\t\t\t</label>\n\t\t\t\t{userInfo.login.username}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nContactItem.propTypes = {\n\tuserInfo : PropTypes.object.isRequired,\n\tcloseUserCard : PropTypes.func.isRequired\n};\n\nexport default ContactItem;\n\n","import React, {useState} from 'react';\nimport classnames from 'classnames';\nimport { Tabs } from 'antd';\nimport {CONFIG} from '../../utils/config'\nimport styles from './Contacts.module.scss'\nimport useFetch from '../../hooks/useFetch'\nimport ContactItem from '../ContactItem'\n\nconst { TabPane } = Tabs;\n\nconst Contacts = () => {\n\n\tconst [userCard, setUserCard] = useState({});\n\n\tconst URL = `${CONFIG.userUrl}/?results=${CONFIG.numberCards}`\n\n\tconst {\n\t\tresponse,\n\t\tisLoading\n\t} = useFetch(URL, true)\n\n\n\tconst handleContactItem = (id) => {\n\t\tconst keys = Object.keys(userCard)\n\t\tif (keys[0] === id)\n\t\t\treturn\n\n\t\tsetUserCard(prevShownComments => ({\n\t\t\t[id]: !prevShownComments[id]\n\t\t}));\n\t}\n\n\tconst closeUserCard = () => {\n\t\tsetUserCard({});\n\t}\n\n\n\tconst rootClass = classnames(\n\t\t{\n\t\t\t[styles.contacts]: true,\n\t\t},\n\t);\n\n\treturn (\n\t\t<div className={rootClass}>\n\t\t\t<h4 className={styles.title}>\n\t\t\t\t{CONFIG.title}\n\t\t\t</h4>\n\n\t\t\t{!isLoading ? (\n\t\t\t\t<Tabs\n\t\t\t\t\ttype=\"card\" defaultActiveKey=\"1\"\n\t\t\t\t>\n\t\t\t\t\t{response.map(pane => (\n\t\t\t\t\t\t<TabPane tab={\n\t\t\t\t\t\t\t<div className={styles.tabItem}>\n\t\t\t\t\t\t\t\t<span className={styles.tabItemChar}>{pane.key}</span> <span className={styles.tabItemLength}> {pane.results.length}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t} disabled={pane.results.length === 0} key={pane.key}>\n\t\t\t\t\t\t\t<ul className={styles.listWrapper}>\n\t\t\t\t\t\t\t\t{pane.results.map((item, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<li key={index} onClick={() => handleContactItem(item.login.uuid)}>\n\t\t\t\t\t\t\t\t\t\t\t<span>{item.name.last}, {item.name.first}</span>\n\n\t\t\t\t\t\t\t\t\t\t\t{userCard[item.login.uuid] ?\n\t\t\t\t\t\t\t\t\t\t\t\t<ContactItem\n\t\t\t\t\t\t\t\t\t\t\t\tuserInfo={item}\n\t\t\t\t\t\t\t\t\t\t\t\tcloseUserCard={closeUserCard}\n\t\t\t\t\t\t\t\t\t\t\t\t/> : null}\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</TabPane>\n\t\t\t\t\t))}\n\t\t\t\t</Tabs>\n\t\t\t) : (\n\t\t\t\t<p>Loading ...</p>\n\t\t\t)}\n\n\t\t</div>\n\t);\n};\n\nexport default Contacts;\n","import React from 'react'\nimport Contacts from '../src/components/Contacts'\nimport \"./styles/_antd.scss\"\nimport \"../src/styles/_base.scss\";\n\nfunction App() {\n  return (\n    <div className=\"container mt40\">\n        <Contacts />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"antd/dist/antd.css\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fixedHeight\":\"ContactItem_fixedHeight__3ScLc\",\"autoHeight\":\"ContactItem_autoHeight__2NEt5\",\"contactCard\":\"ContactItem_contactCard__v5uoT\",\"information\":\"ContactItem_information__328LB\",\"fullname\":\"ContactItem_fullname__1wN4J\",\"item\":\"ContactItem_item__32b6X\",\"photo\":\"ContactItem_photo__3zTk5\",\"username\":\"ContactItem_username__2BQl3\",\"closeIcon\":\"ContactItem_closeIcon__2AVGo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Contacts_contacts__kbOkO\",\"title\":\"Contacts_title__35lfT\",\"listWrapper\":\"Contacts_listWrapper__3e46q\"};"],"sourceRoot":""}